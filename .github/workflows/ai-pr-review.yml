name: AI PR Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  pull-requests: write # Ensures GITHUB_TOKEN can comment on PRs

jobs:
  ai-review:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensures full Git history is available

      - name: Fetch PR Base Branch
        run: |
          BASE_BRANCH="${{ github.event.pull_request.base.ref }}"
          echo "Fetching base branch: ${BASE_BRANCH}"
          git fetch origin ${BASE_BRANCH}:${BASE_BRANCH}

      - name: Fetch PR Changes
        run: |
          BASE_BRANCH="${{ github.event.pull_request.base.ref }}"
          echo "Generating diff from $BASE_BRANCH to HEAD"
          git diff --unified=0 ${BASE_BRANCH}...HEAD > pr_changes.diff

          echo "---- Generated Diff ----"
          cat pr_changes.diff
          echo "------------------------"

      - name: Review PR with OpenAI
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          DIFF_CONTENT=$(cat pr_changes.diff)

          # Debug: Print the diff content before sending to OpenAI
          echo "---- DIFF CONTENT BEFORE SENDING ----"
          echo "$DIFF_CONTENT"
          echo "-------------------------------------"

          # Handle cases where diff is empty
          if [ -z "$DIFF_CONTENT" ]; then
            echo "LGTM ✅" > review_comment.md
            exit 0
          fi

          RESPONSE=$(curl -s -X POST "https://api.openai.com/v1/chat/completions" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d "$(jq -n --arg model "gpt-4" \
            --arg system_msg "You are a senior software engineer reviewing a pull request. Your goal is to analyze the code changes, identify issues, suggest improvements, and provide structured feedback. If there are no issues, state explicitly why the changes are good." \
            --arg user_msg "Here is a Git diff from a pull request. Provide a detailed review, highlighting any improvements needed:\n\n$DIFF_CONTENT" \
            '{
              model: $model,
              messages: [
                {role: "system", content: $system_msg},
                {role: "user", content: $user_msg}
              ]
            }')")

          echo "---- RAW OPENAI RESPONSE ----"
          echo "$RESPONSE"
          echo "----------------------------"

          REVIEW_TEXT=$(echo "$RESPONSE" | jq -r '.choices[0].message.content')

          # Ensure AI response is meaningful; fallback to "LGTM" if response is still empty
          echo "### AI Review Feedback" > review_comment.md
          if [ -z "$REVIEW_TEXT" ] || [ "$REVIEW_TEXT" == "null" ]; then
            echo "❗ AI Review Failed: No meaningful feedback generated. Manually review the PR." >> review_comment.md
          else
            echo "$REVIEW_TEXT" >> review_comment.md
          fi

      - name: Post AI Review Comment
        uses: mshick/add-pr-comment@v2
        with:
          message-path: review_comment.md
          repo-token: ${{ secrets.GITHUB_TOKEN }} # Uses GitHub's built-in token
